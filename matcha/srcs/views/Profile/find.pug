extends ../layout

block style
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/10.0.0/css/bootstrap-slider.min.css')
    link(rel='stylesheet', href='/assets/css/bootstrap-tagsinput.css')
    style.
        .tooltip.tooltip-main {
            opacity: 1;
        }
        .slider-selection {
            background: #007bff;
        }
        .slider {
            margin-top: 30px;
            display: block;
        }
        .slider.slider-horizontal {
            width: 100%;
        }
        .user {
            position: relative;
            margin-top: 70px;
            min-height: 90px;
        }
        .user img {
            border-radius: 50%;
            width: 55%;
            margin-top: -61px;
        }
        .user h3 {
            margin-top: 5px;
        }
        .user {
            text-align: center;
        }


block content
    .container.mt-5
        .card
            .card-body
                h2 #{title}
                hr

                form(method='post', action='', data-ajax, data-ajax-callback='usersFound')

                    .row.text-center
                        .col-md-6
                            .form-group
                                label Âge
                                input(type='text', name='age', data-provide='slider', data-slider-min='18' data-slider-max='90' data-slider-step='1' data-slider-value='[0,90]')

                        .col-md-6
                            .form-group
                                label Score popularité
                                input(type='text', name='popularity', data-provide='slider', data-slider-min='0' data-slider-max='1000' data-slider-step='5' data-slider-value='[0,1000]')

                    .form-group
                        label Localisation
                        input.form-control(type='text', name='location')

                    .form-group
                        label Liste d'intérêts
                        input.form-control(type='text', name='tags', data-role='tagsinput')

                    button.btn.btn-primary(type='submit')
                        i.fa.fa-search
                        | &nbsp;&nbsp;Rechercher

        .mt-2
            hr
            .results




block scripts
    script(type='text/html')#order-template.
        <h3>Résultats</h3>
        <hr>
        <button class="btn btn-info order-age" data-order-type="asc">
            Âge&nbsp;&nbsp;<i class="fa fa-sort"></i>
        </button>
        <button class="btn btn-info ml-3 order-popularity" data-order-type="asc">
            Popularité&nbsp;&nbsp;<i class="fa fa-sort"></i>
        </button>
        <button class="btn btn-info ml-3 order-tags" data-order-type="asc">
            Intérêts&nbsp;&nbsp;<i class="fa fa-sort"></i>
        </button>
        <button class="btn btn-info ml-3 order-location" data-order-type="asc">
            Localisation&nbsp;&nbsp;<i class="fa fa-sort"></i>
        </button>
        <hr>
        <div class="row text-center">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Âge</label>
                    <input type="text" name="filter-age" data-provide="slider" data-slider-min="{AGE_MIN}" data-slider-max="{AGE_MAX}" data-slider-step="1" data-slider-value="[{AGE_MIN},{AGE_MAX}]">
                </div>
            </div>
        </div>
        <hr>
    script(type='text/html')#user-template.
        <div class="col-md-3">
            <div class="card user">
                <div class="card-body">
                    <img class="img-thumbnail" src="{PROFILE_PIC}">
                    <div class="cleafix"></div>
                    <h3>{USERNAME}</h3>
                    <hr>
                    <a class="btn btn-primary" href="/{USERNAME}">
                        <i class="fa fa-user"></i>
                        &nbsp;&nbsp;Voir le profil
                    </a>
                </div>
            </div>
        </div>
    script(src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/10.0.0/bootstrap-slider.min.js')
    script(type='text/javascript', src='/assets/js/bootstrap-tagsinput.min.js')
    script(type='text/javascript', src='https://maps.googleapis.com/maps/api/js?key=' + googleApiKey + '&libraries=places')
    script(type='text/javascript', src='http://underscorejs.org/underscore-min.js')
    script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/async/2.6.0/async.min.js')
    script(type='text/javascript').
        function generateUserHtml(user) {
            var html = $('#user-template').html();

            html = html.replace(/{USERNAME}/g, user.username);
            if (user.profile_pic)
                html = html.replace('{PROFILE_PIC}', '/uploads/pics/' + user.profile_pic);
            else
                html = html.replace('{PROFILE_PIC}', '/assets/img/default_profile_pic.png');

            return html;
        }

        var users = [];
        function usersFound(req, res)
        {
            if (res.data.length === 0)
                return $('.results').html('');

            var html = $('#order-template').html();
            var ageValue = $('input[name="age"]').val().split(',');
            html = html.replace(/{AGE_MIN}/g, ageValue[0]);
            html = html.replace(/{AGE_MAX}/g, ageValue[1]);

            users = res.data;

            html += '<div class="row result-row">';
            for (var i = 0; i < res.data.length; i++)
                html += generateUserHtml(res.data[i]);
            html += '</div>';

            $('.results').html(html);
            $('input[name="filter-age"]').bootstrapSlider();
            initOrderEvents();
        }

        function initOrderEvents()
        {
            $('.order-age').unbind('click').on('click', function (e) {
                var button = $(this);
                var type = button.attr('data-order-type');

                var sortedUsers = _.sortBy(users, 'age');
                if (type === 'desc')
                    sortedUsers.reverse();

                var html = '';
                for (var i = 0; i < sortedUsers.length; i++)
                    html += generateUserHtml(sortedUsers[i]);
                $('.results .result-row').html(html);
                button.attr('data-order-type', (type === 'asc' ? 'desc' : 'asc'))
            });
            $('.order-popularity').unbind('click').on('click', function (e) {
                var button = $(this);
                var type = button.attr('data-order-type');

                var sortedUsers = _.sortBy(users, 'popularity');
                if (type === 'desc')
                    sortedUsers.reverse();

                var html = '';
                for (var i = 0; i < sortedUsers.length; i++)
                    html += generateUserHtml(sortedUsers[i]);
                $('.results .result-row').html(html);
                button.attr('data-order-type', (type === 'asc' ? 'desc' : 'asc'))
            });
            $('.order-tags').unbind('click').on('click', function (e) {
                var button = $(this);
                var type = button.attr('data-order-type');
                var userTags = '#{user.tags}'.split(',');
                if (userTags.length === 0)
                    return 0;

                var sortedUsers = users.sort(function (a, b) {
                    var aTags = a.tags.split(',');
                    var bTags = b.tags.split(',');

                    if (type === 'asc')
                        return _.difference(aTags, userTags).length - _.difference(bTags, userTags).length;
                    else
                        return _.difference(bTags, userTags).length - _.difference(aTags, userTags).length;
                });

                var html = '';
                for (var i = 0; i < sortedUsers.length; i++)
                    html += generateUserHtml(sortedUsers[i]);
                $('.results .result-row').html(html);
                button.attr('data-order-type', (type === 'asc' ? 'desc' : 'asc'))
            });
            $('.order-location').unbind('click').on('click', function (e) {
                var button = $(this);
                var type = button.attr('data-order-type');
                var userLocation = '#{user.location}';
                if (userLocation.length === 0)
                    return 0;

                async.sortBy(users, function (user, callback) {
                    new google.maps.DistanceMatrixService().getDistanceMatrix({
                        origins: [userLocation],
                        destinations: [user.location],
                        travelMode: 'DRIVING'
                    }, function (response, status) {
                        if (status !== 'OK')
                            return callback(undefined, 0);
                        return callback(undefined, response.rows[0].elements[0].distance.value);
                    });
                }, function (err, sortedUsers) {
                    if (type === 'desc')
                        sortedUsers.reverse();
                    var html = '';
                    for (var i = 0; i < sortedUsers.length; i++)
                        html += generateUserHtml(sortedUsers[i]);
                    $('.results .result-row').html(html);
                    button.attr('data-order-type', (type === 'asc' ? 'desc' : 'asc'))
                });
            });
        }

        new google.maps.places.Autocomplete(document.querySelector('input[name="location"]'), {});